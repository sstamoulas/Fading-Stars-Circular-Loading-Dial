{"version":3,"sources":["components/custom-loader/custom-loader.component.jsx","App.js","serviceWorker.js","index.js"],"names":["CustomLoader","useState","opacity","setOpacity","useEffect","interval","setInterval","clearInterval","xmlns","viewBox","style","height","width","display","margin","d","x","y","textAnchor","stroke","strokeWidth","dy","fontSize","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4123c397.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst CustomLoader = () => {\n  const [opacity, setOpacity] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if(opacity >= 1) {\n        setOpacity(0);\n      }\n      else {\n        setOpacity(opacity + 0.05);\n      }\n    }, 50);\n\n    return () => clearInterval(interval);\n  }, [opacity]);\n\n  return (\n    <svg \n      xmlns=\"http://www.w3.org/2000/svg\" \n      viewBox=\"0 0 500 500\"\n      style={{height: '50vh', width: '50vw', display: 'block', margin: '0 auto'}}\n    >\n      <path d=\"M100 250 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.95) % 1}`}} />\n      <path d=\"M106 208 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.90) % 1}`}} />\n      <path d=\"M130 160 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.85) % 1}`}} />\n      <path d=\"M160 130 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.80) % 1}`}} />\n      <path d=\"M208 106 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.75) % 1}`}} />\n      <path d=\"M250 100 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.70) % 1}`}} />\n      <path d=\"M292 106 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.65) % 1}`}} />\n      <path d=\"M340 130 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.60) % 1}`}} />\n      <path d=\"M370 160 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.55) % 1}`}} />\n      <path d=\"M394 208 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.50) % 1}`}} />\n      <path d=\"M400 250 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.45) % 1}`}} />\n      <path d=\"M394 292 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.40) % 1}`}} />      \n      <path d=\"M370 340 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.35) % 1}`}} />\n      <path d=\"M340 370 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.30) % 1}`}} />\n      <path d=\"M292 394 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.25) % 1}`}} />\n      <path d=\"M250 400 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.20) % 1}`}} />\n      <path d=\"M208 394 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.15) % 1}`}} />\n      <path d=\"M160 370 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.10) % 1}`}} />\n      <path d=\"M130 340 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.05) % 1}`}} />\n      <path d=\"M106 292 l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" style={{opacity: `${(opacity + 0.00) % 1}`}} />\n\n      <text x=\"50%\" y=\"50%\" textAnchor=\"middle\" stroke=\"#000\" strokeWidth=\"2px\" dy=\".5em\" style={{fontSize: '40px'}}>Loading</text>\n      <text x={`${65 + (opacity <= .3 ? 1 : opacity <= .6 ? 2 : 3)}%`} y=\"50%\" textAnchor=\"middle\" stroke=\"#000\" strokeWidth=\"2px\" dy=\".5em\" style={{fontSize: '40px'}}>\n        {opacity === 0 ? '' : opacity <= .3 ? '.' : opacity <= .6 ? '..' : '...'}\n      </text>\n    </svg>\n  );\n}\n\nexport default CustomLoader;\n","import React from 'react';\n\nimport CustomLoader from './components/custom-loader/custom-loader.component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CustomLoader />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}